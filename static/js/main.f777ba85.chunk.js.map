{"version":3,"sources":["loader.gif","Loading.js","Coins.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","id","src","loader","alt","Cards","React","lazy","Coins","useState","coins","setCoins","searchcoin","setSearchcoin","filteredCoins","setFilteredcoins","useEffect","axios","get","then","response","data","catch","error","console","log","filter","coin","name","toLowerCase","includes","type","placeholder","onChange","e","target","value","fallback","map","props","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,MAA0B,mC,OCG1B,SAASA,IACpB,OACI,qBAAKC,GAAG,UAAR,SAEI,qBAAKC,IAAKC,EAAQC,IAAI,iB,UCF5BC,EAAQC,IAAMC,MAAK,kBAAI,gCAId,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAyCJ,mBAAS,IAAlD,mBAAOK,EAAP,KAAqBC,EAArB,KAyBA,OAvBAC,qBAAU,WACRC,IACGC,IACC,4HAEDC,MAAK,SAACC,GAELT,EAASS,EAASC,MAClBN,EAAiBK,EAASC,SAE3BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IAGHP,qBAAU,WAEU,MAAfJ,GACDG,EAAiBL,EAAMgB,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASlB,EAAWiB,qBAGrF,CAACjB,IAID,cAAC,WAAD,UACE,sBAAKX,GAAG,aAAR,UACE,gCACE,qBAAKA,GAAG,QAAR,oCAGA,qBAAKA,GAAG,SAAR,SACE,uBACE8B,KAAK,OACL9B,GAAG,OACH+B,YAAY,uBACZC,SAAU,SAACC,GAAD,OAAOrB,EAAcqB,EAAEC,OAAOC,eAI9C,qBAAKnC,GAAG,YAAR,SACE,cAAC,WAAD,CAAUoC,SAAU,cAACrC,EAAD,IAApB,SACCc,EAAcwB,KAAI,SAAAX,GAAI,OAAE,cAACtB,EAAD,CAAqBkC,MAAOZ,GAAhBA,EAAK1B,gBC5CrCuC,MARf,WACE,OACE,8BACE,cAAChC,EAAD,OCMSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f777ba85.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.7f686c03.gif\";","import React from 'react';\r\nimport loader from './loader.gif';\r\n\r\nexport default function Loading(){\r\n    return(\r\n        <div id=\"spinner\">\r\n            {/* Loading........... */}\r\n            <img src={loader} alt=\"loading...\"/>\r\n        </div>\r\n    )\r\n}","import React, { Fragment, Suspense, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loading from './Loading';\r\n// import Cards from './Cards';\r\nimport './style.css';\r\nconst Cards = React.lazy(()=>import('./Cards'));\r\n\r\n// const BASE_URL=\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=500&page=1&sparkline=false\";\r\n\r\nexport default function Coins() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [searchcoin, setSearchcoin] = useState(null);\r\n  const [filteredCoins,setFilteredcoins] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=500&page=1&sparkline=false\"\r\n      )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        setCoins(response.data);\r\n        setFilteredcoins(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  \r\n  useEffect(()=>{\r\n    // console.log(searchcoin);\r\n    if(searchcoin !== ' '){\r\n      setFilteredcoins(coins.filter( coin => coin.name.toLowerCase().includes(searchcoin.toLowerCase())));\r\n    }\r\n    // console.log(filteredCoins);\r\n  },[searchcoin])\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div id=\"parent-div\">   \r\n        <nav>\r\n          <div id=\"title\">\r\n          Cryptocurrency Tracker\r\n          </div>\r\n          <div id=\"search\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"coin\"\r\n              placeholder=\"Enter Cryptocurrency\"\r\n              onChange={(e) => setSearchcoin(e.target.value)}\r\n            ></input>\r\n          </div>\r\n        </nav>\r\n        <div id=\"coin-card\">\r\n          <Suspense fallback={<Loading/>}>\r\n          {filteredCoins.map(coin=><Cards key={coin.id} props={coin}/>)}\r\n          </Suspense>\r\n          {/* <Cards props={filteredCoins}/> */}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\nimport Coins from './Coins';\n\nfunction App() {\n  return (\n    <div>\n      <Coins/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}