{"version":3,"sources":["loader.gif","Loading.js","Coins.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","id","src","loader","alt","Cards","React","lazy","Coins","useState","coins","setCoins","searchcoin","setSearchcoin","filteredCoins","setFilteredcoins","page","setPage","useEffect","axios","get","then","response","data","catch","error","console","log","filter","coin","name","toLowerCase","includes","type","placeholder","onChange","e","target","value","onClick","disabled","map","fallback","props","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,MAA0B,mC,OCG1B,SAASA,IACpB,OACI,qBAAKC,GAAG,UAAR,SAEI,qBAAKC,IAAKC,EAAQC,IAAI,iB,UCF5BC,EAAQC,IAAMC,MAAK,kBAAM,gCAIhB,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAAwBN,mBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAyCA,OAvCAC,qBAAU,WACRC,IACGC,IADH,4HAIGC,MAAK,SAACC,GAELL,EAAQD,EAAO,GACfL,EAASW,EAASC,MAClBR,EAAiBO,EAASC,SAE3BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IAEHP,qBAAU,WACRQ,QAAQC,IAAIX,GACZG,IACGC,IADH,iHAE8GJ,EAF9G,qBAIGK,MAAK,SAACC,GACLX,EAASW,EAASC,MAClBR,EAAiBO,EAASC,SAE3BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACT,IAEJE,qBAAU,WACRQ,QAAQC,IAAIjB,GACO,MAAfE,GACFG,EACEL,EAAMkB,QAAO,SAACC,GAAD,OACXA,EAAKC,KAAKC,cAAcC,SAASpB,EAAWmB,qBAKjD,CAACnB,IAGF,cAAC,WAAD,UACE,sBAAKX,GAAG,aAAR,UACE,gCACE,qBAAKA,GAAG,QAAR,oCACA,qBAAKA,GAAG,SAAR,SACE,uBACEgC,KAAK,OACLhC,GAAG,OACHiC,YAAY,wBACZC,SAAU,SAACC,GAAD,OAAOvB,EAAcuB,EAAEC,OAAOC,YAG5C,sBAAKrC,GAAG,cAAR,UACE,wBACEsC,QAAS,SAACH,GAAD,OAAOnB,EAAQD,EAAO,IAC/BwB,SAAmB,IAATxB,EAFZ,kBAMA,wBACEuB,QAAS,SAACH,GAAD,OAAOnB,EAAQD,EAAO,IAC/BwB,SAAmB,KAATxB,EAFZ,wBASJ,qBAAKf,GAAG,YAAR,SACGa,EAAc2B,KAAI,SAACZ,GAAD,OACjB,cAAC,WAAD,CAAUa,SAAU,cAAC1C,EAAD,IAApB,SACE,cAACK,EAAD,CAAqBsC,MAAOd,GAAhBA,EAAK5B,gBC3EhB2C,MARf,WACE,OACE,8BACE,cAACpC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f25d5e90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.7f686c03.gif\";","import React from 'react';\r\nimport loader from './loader.gif';\r\n\r\nexport default function Loading(){\r\n    return(\r\n        <div id=\"spinner\">\r\n            {/* Loading........... */}\r\n            <img src={loader} alt=\"loading...\"/>\r\n        </div>\r\n    )\r\n}","import React, { Fragment, Suspense, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./Loading\";\r\n// import Cards from './Cards';\r\nimport \"./style.css\";\r\nconst Cards = React.lazy(() => import(\"./Cards\"));\r\n\r\n// const BASE_URL=\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=500&page=1&sparkline=false\";\r\n\r\nexport default function Coins() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [searchcoin, setSearchcoin] = useState(null);\r\n  const [filteredCoins, setFilteredcoins] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=250&page=1&sparkline=false`\r\n      )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        setPage(page + 1);\r\n        setCoins(response.data);\r\n        setFilteredcoins(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(page);\r\n    axios\r\n      .get(\r\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=250&page=${page}&sparkline=false`\r\n      )\r\n      .then((response) => {\r\n        setCoins(response.data);\r\n        setFilteredcoins(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    console.log(coins);\r\n    if (searchcoin !== \" \") {\r\n      setFilteredcoins(\r\n        coins.filter((coin) =>\r\n          coin.name.toLowerCase().includes(searchcoin.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n    // console.log(filteredCoins);\r\n  }, [searchcoin]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div id=\"parent-div\">\r\n        <nav>\r\n          <div id=\"title\">Cryptocurrency Tracker</div>\r\n          <div id=\"search\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"coin\"\r\n              placeholder=\"Search Cryptocurrency\"\r\n              onChange={(e) => setSearchcoin(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div id=\"page-change\">\r\n            <button\r\n              onClick={(e) => setPage(page - 1)}\r\n              disabled={page === 1 ? true : false}\r\n            >\r\n              Prev\r\n            </button>\r\n            <button\r\n              onClick={(e) => setPage(page + 1)}\r\n              disabled={page === 35 ? true : false}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </nav>\r\n\r\n        <div id=\"coin-card\">\r\n          {filteredCoins.map((coin) => (\r\n            <Suspense fallback={<Loading />}>\r\n              <Cards key={coin.id} props={coin} />\r\n            </Suspense>\r\n          ))}\r\n\r\n          {/* <Cards props={filteredCoins}/> */}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\nimport Coins from './Coins';\n\nfunction App() {\n  return (\n    <div>\n      <Coins/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}